[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "setuptools_scm[toml]>=3.4",
]
build-backend = 'setuptools.build_meta'

[tool.setuptools_scm]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310,coverage-report,lint
isolated_build = True

[testenv]
description = Run pytest against {envname}.
deps =
    -r{toxinidir}/requirements/main.txt
    -r{toxinidir}/requirements/dev.txt
commands =
    coverage run -m pytest {posargs}
passenv =
    # Basic configuration
    BUTLER_URI_1
    BUTLER_URI_2
    PGUSER
    PGPASSWORD
    EXPOSURELOG_DB_USER
    EXPOSURELOG_DB_PASSWORD
    EXPOSURELOG_DB_HOST
    EXPOSURELOG_DB_PORT
    EXPOSURELOG_DB_DATABASE
    SITE_ID
    # OpenSplice DDS and SAL, should this prove necessary
    # LSST_DDS_QOS
    # OSPL_HOME
    # OSPL_URI
    # ADLINK_LICENSE
setenv =
    # Silence warning about ignoring PYTHONPATH.
    PYTHONPATH=

[testenv:coverage-report]
description = Compile coverage from each test run.
skip_install = true
deps = coverage[toml]>=5.0.2
depends =
    py310
commands =
    coverage combine
    coverage report

[testenv:lint]
description = Lint codebase by running pre-commit (black, isort, flake8, mypy).
skip_install = true
deps =
    pre-commit
commands = pre-commit run --all-files

[testenv:run]
description = Run the development server with auto-reload for code changes.
usedevelop = true
commands = uvicorn exposurelog.app:app --reload
"""

[tool.coverage.run]
parallel = true
branch = true
source = ["exposurelog"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]

[tool.black]
line-length = 79
target-version = ['py310']
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''
# Use single-quoted strings so TOML treats the string like a Python r-string
# Multi-line strings are implicitly treated by black as regular expressions

[tool.isort]
include_trailing_comma = true
multi_line_output = 3
known_first_party = ["exposurelog", "tests"]
skip = ["docs/conf.py"]
